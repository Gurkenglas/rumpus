TODAY:
- Text editor pass:
    Try to get things to a point where e.g. treeroom can be coded from scratch from inside rumpus.

    - [ ] Widgets for Start, Collision, Update code
    - [ ] OnSelect that detects raycasts
    - [x] Widget text labels
        - [x] Make "selection" a Maybe in freetype-gl-mini



- [ ] Find a way to not leak derivedcomponents; e.g. if we want to change the shape of an object.
        deriveComponent could remove any existing rigidbody, but if we can only derive components currently
        by calling deriveComponent on everything then we'd have to drop and recreate everyhing even when editing a non-related component.
        - This falls under the general umbrella of actions on setting; e.g. updating rigid body poses when setting pose.
        - Can do this by having keys be pointers to ComponentInterface rather than just the Key itself?


- [ ] Widgets
    - [ ] Widget for switching kinematic on/off
    - [ ] Widget for switching contact response on/off
        - one widget type for sum types (e.g. ShapeType)
        - one for list types (e.g. Properties)

    - [ ] Make 3D icons out of primitives : )
        e.g. oO for collision response or something
        Would be nice to make these in-engine and just have them be .yaml files,
        but we'd have to make sure to figure out how to not be re-parsing the yaml
        on every creation!



- [x] Component library so we can define an entity, name it and spawn it

- [x] Handy note: we can use start function to define everything else by just setting properties on self.
    - Animations can be added in Start

- [ ] Fix readArray in pd-hs -Â it should return an unboxed Vector rather than a list

- [x] Add Hands system that simply adds hands and head entities and makes them available as
        hndLeftHand hndRightHand hndHead
        also isLeftHand isRightHand isHand isHandOrHead isHead
        Use this in Controls to get rid of string-based hand finding.

- [ ] Create an object that blows sound bubbles when you touch it

DONE
- [x] Speech recorder with OnEnter/OnExit!

- [x] CollisionEnter/CollisionExit
    (just keep a Set of collision pairs, detect entries and exits that way)
    Collisions should be their own system.

- [x] Put script code in a reader monad so we can have an implicit self!
        then have all the code use that.
