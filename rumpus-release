#!/bin/sh

rm -rf .release/

stack install --flag rumpus:-Logging rumpus:rumpus --local-bin-path=.release

mkdir -p .release/packages/ghc/mingw/bin
mkdir -p .release/packages/snapshot
mkdir -p .release/packages/local

snapshot_libs=$(stack path --snapshot-install-root | sed 's|\\|\\\\|g')
local_libs=$(stack path --local-install-root | sed 's|\\|\\\\|g')
ghc_libs=$(stack path --global-pkg-db|  sed 's|package.conf.d||g' | sed 's|\\|\\\\|g')

echo "Compiling fake GCC..."
ghc util/fakeGCC.hs -o .release/packages/ghc/mingw/bin/gcc.exe


echo "Copying ghc package db..."
cp -R $ghc_libs .release/packages/ghc


echo "Copying snapshot package db..."
cp -R $snapshot_libs/lib .release/packages/snapshot
cp -R $snapshot_libs/pkgdb .release/packages/snapshot


echo "Copying local package db..."
cp -R $local_libs/lib .release/packages/local
cp -R $local_libs/pkgdb .release/packages/local


echo "Fixing absolute references in package DBs..."
# in snapshot, replace all mentions of the absolute snapshot pkg dir with ${pkgroot}
find .release/packages/snapshot -name "*.conf" | xargs sed -i -e 's|'$snapshot_libs'|${pkgroot}|g'
ghc-pkg \
   --package-db .release/packages/ghc/lib/package.conf.d \
   --package-db .release/packages/snapshot/pkgdb \
   recache

# in local, replace all mentions of the absolute local pkg dir with ${pkgroot}
find .release/packages/local -name "*.conf" | xargs sed -i -e 's|'$local_libs'|${pkgroot}|g'
ghc-pkg \
   --package-db .release/packages/ghc/lib/package.conf.d \
   --package-db .release/packages/snapshot/pkgdb \
   --package-db .release/packages/local/pkgdb \
   recache


echo "Copying resources..."
cp -r resources/ .release/
cp -r scenes/ .release/


echo "Copying dlls..."
cp `which libfreetype-6.dll` .release
cp `which libpd.dll` .release
cp `which libwinpthread-1.dll` .release
cp `which OpenAL32.dll` .release
cp `which openvr_api.dll` .release
cp `which libstdc++-6.dll` .release
cp `which libbz2-1.dll` .release
cp `which libharfbuzz-0.dll` .release
cp `which zlib1.dll` .release
cp `which libpng16-16.dll` .release
cp `which libgcc_s_seh-1.dll` .release
cp `which libglib-2.0-0.dll` .release
cp `which libintl-8.dll` .release
cp `which libiconv-2.dll` .release

echo "Applying icon..."
rcedit .release/rumpus.exe --set-icon RumpusIcon.ico

# DEV ONLY
# echo "DEV: MOVING STACK WORK DIR AND RUNNING RUMPUS..."
# rm -rf .stack-work
# (cd .release/ && ./rumpus.exe)